SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS roles CASCADE;
DROP TABLE IF EXISTS users_roles CASCADE;
DROP TABLE IF EXISTS authorities CASCADE;
DROP TABLE IF EXISTS roles_authorities CASCADE;
DROP TYPE IF EXISTS ROLE CASCADE;
DROP TYPE IF EXISTS AUTHORITY CASCADE;
DROP TYPE IF EXISTS STATUS CASCADE;

CREATE TYPE ROLE AS ENUM ('USER', 'ADMIN');
CREATE TYPE AUTHORITY AS ENUM ('READ', 'WRITE');
CREATE TYPE STATUS AS ENUM ('ACTIVE', 'BANNED');

CREATE TABLE users(
    id BIGSERIAL CONSTRAINT user_pk PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    status STATUS DEFAULT 'ACTIVE',
    UNIQUE (email)
);

CREATE TABLE roles(
    id BIGSERIAL CONSTRAINT role_pk PRIMARY KEY,
    name ROLE DEFAULT 'USER',
    UNIQUE (name)
);

CREATE TABLE users_roles(
    user_id BIGSERIAL CONSTRAINT user_fk REFERENCES users ON DELETE CASCADE,
    role_id BIGSERIAL CONSTRAINT role_fk REFERENCES roles ON DELETE CASCADE
);

CREATE TABLE authorities(
    id BIGSERIAL CONSTRAINT authority_pk PRIMARY KEY,
    name AUTHORITY DEFAULT 'READ',
    UNIQUE (name)
);

CREATE TABLE roles_authorities(
    role_id BIGSERIAL CONSTRAINT role_fk REFERENCES roles ON DELETE CASCADE,
    authority_id BIGSERIAL CONSTRAINT authority_fk REFERENCES authorities ON DELETE CASCADE
);

SET FOREIGN_KEY_CHECKS=1;




